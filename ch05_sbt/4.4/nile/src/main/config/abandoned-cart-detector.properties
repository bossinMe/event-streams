# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=abandoned-cart-detector

# YARN
yarn.package.path=file://${target}/${project.artifactId}-${pom.version}-dist.tar.gz

# Task
task.class=nile.AbandonedCartStreamTask
task.inputs=kafka.raw-events
task.window.ms=30000
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
task.checkpoint.replication.factor=1

# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.consumer.auto.offset.reset=largest
systems.kafka.producer.bootstrap.servers=localhost:9092

# Key-value storage
stores.abandoned-cart-detector.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.abandoned-cart-detector.changelog=kafka.abandoned-cart-detector-changelog
stores.abandoned-cart-detector.key.serde=string
stores.abandoned-cart-detector.msg.serde=string
# Normally, we'd leave this alone, but we have only one broker.
stores.abandoned-cart-detector.changelog.replication.factor=1
# Normally, we'd set this much higher, but we want things to look snappy in the demo.
stores.abandoned-cart-detector.write.batch.size=0
stores.abandoned-cart-detector.object.cache.size=0
